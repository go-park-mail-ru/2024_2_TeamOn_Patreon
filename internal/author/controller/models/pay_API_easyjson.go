// Code generated by easyjson for marshaling/unmarshaling. DO NOT EDIT.

package models

import (
	json "encoding/json"
	easyjson "github.com/mailru/easyjson"
	jlexer "github.com/mailru/easyjson/jlexer"
	jwriter "github.com/mailru/easyjson/jwriter"
)

// suppress unused package warning
var (
	_ *json.RawMessage
	_ *jlexer.Lexer
	_ *jwriter.Writer
	_ easyjson.Marshaler
)

func easyjsonF1ce6669DecodeGithubComGoParkMailRu20242TeamOnPatreonInternalAuthorControllerModels(in *jlexer.Lexer, out *PaymentResponse) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "id":
			out.ID = string(in.String())
		case "status":
			out.Status = string(in.String())
		case "paid":
			out.Paid = bool(in.Bool())
		case "amount":
			(out.Amount).UnmarshalEasyJSON(in)
		case "created_at":
			out.CreatedAt = string(in.String())
		case "description":
			out.Description = string(in.String())
		case "confirmation":
			(out.Confirmation).UnmarshalEasyJSON(in)
		case "metadata":
			(out.Metadata).UnmarshalEasyJSON(in)
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonF1ce6669EncodeGithubComGoParkMailRu20242TeamOnPatreonInternalAuthorControllerModels(out *jwriter.Writer, in PaymentResponse) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix[1:])
		out.String(string(in.ID))
	}
	{
		const prefix string = ",\"status\":"
		out.RawString(prefix)
		out.String(string(in.Status))
	}
	{
		const prefix string = ",\"paid\":"
		out.RawString(prefix)
		out.Bool(bool(in.Paid))
	}
	{
		const prefix string = ",\"amount\":"
		out.RawString(prefix)
		(in.Amount).MarshalEasyJSON(out)
	}
	{
		const prefix string = ",\"created_at\":"
		out.RawString(prefix)
		out.String(string(in.CreatedAt))
	}
	{
		const prefix string = ",\"description\":"
		out.RawString(prefix)
		out.String(string(in.Description))
	}
	{
		const prefix string = ",\"confirmation\":"
		out.RawString(prefix)
		(in.Confirmation).MarshalEasyJSON(out)
	}
	{
		const prefix string = ",\"metadata\":"
		out.RawString(prefix)
		(in.Metadata).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v PaymentResponse) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonF1ce6669EncodeGithubComGoParkMailRu20242TeamOnPatreonInternalAuthorControllerModels(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v PaymentResponse) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonF1ce6669EncodeGithubComGoParkMailRu20242TeamOnPatreonInternalAuthorControllerModels(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *PaymentResponse) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonF1ce6669DecodeGithubComGoParkMailRu20242TeamOnPatreonInternalAuthorControllerModels(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *PaymentResponse) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonF1ce6669DecodeGithubComGoParkMailRu20242TeamOnPatreonInternalAuthorControllerModels(l, v)
}
func easyjsonF1ce6669DecodeGithubComGoParkMailRu20242TeamOnPatreonInternalAuthorControllerModels1(in *jlexer.Lexer, out *PaymentRequest) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "amount":
			(out.Amount).UnmarshalEasyJSON(in)
		case "description":
			out.Description = string(in.String())
		case "confirmation":
			(out.Confirmation).UnmarshalEasyJSON(in)
		case "metadata":
			(out.Metadata).UnmarshalEasyJSON(in)
		case "test":
			out.Test = bool(in.Bool())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonF1ce6669EncodeGithubComGoParkMailRu20242TeamOnPatreonInternalAuthorControllerModels1(out *jwriter.Writer, in PaymentRequest) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"amount\":"
		out.RawString(prefix[1:])
		(in.Amount).MarshalEasyJSON(out)
	}
	{
		const prefix string = ",\"description\":"
		out.RawString(prefix)
		out.String(string(in.Description))
	}
	{
		const prefix string = ",\"confirmation\":"
		out.RawString(prefix)
		(in.Confirmation).MarshalEasyJSON(out)
	}
	if true {
		const prefix string = ",\"metadata\":"
		out.RawString(prefix)
		(in.Metadata).MarshalEasyJSON(out)
	}
	{
		const prefix string = ",\"test\":"
		out.RawString(prefix)
		out.Bool(bool(in.Test))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v PaymentRequest) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonF1ce6669EncodeGithubComGoParkMailRu20242TeamOnPatreonInternalAuthorControllerModels1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v PaymentRequest) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonF1ce6669EncodeGithubComGoParkMailRu20242TeamOnPatreonInternalAuthorControllerModels1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *PaymentRequest) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonF1ce6669DecodeGithubComGoParkMailRu20242TeamOnPatreonInternalAuthorControllerModels1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *PaymentRequest) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonF1ce6669DecodeGithubComGoParkMailRu20242TeamOnPatreonInternalAuthorControllerModels1(l, v)
}
func easyjsonF1ce6669DecodeGithubComGoParkMailRu20242TeamOnPatreonInternalAuthorControllerModels2(in *jlexer.Lexer, out *NotificationPaymentService) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "type":
			out.Type = string(in.String())
		case "event":
			out.Event = string(in.String())
		case "object":
			(out.Object).UnmarshalEasyJSON(in)
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonF1ce6669EncodeGithubComGoParkMailRu20242TeamOnPatreonInternalAuthorControllerModels2(out *jwriter.Writer, in NotificationPaymentService) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"type\":"
		out.RawString(prefix[1:])
		out.String(string(in.Type))
	}
	{
		const prefix string = ",\"event\":"
		out.RawString(prefix)
		out.String(string(in.Event))
	}
	{
		const prefix string = ",\"object\":"
		out.RawString(prefix)
		(in.Object).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v NotificationPaymentService) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonF1ce6669EncodeGithubComGoParkMailRu20242TeamOnPatreonInternalAuthorControllerModels2(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v NotificationPaymentService) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonF1ce6669EncodeGithubComGoParkMailRu20242TeamOnPatreonInternalAuthorControllerModels2(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *NotificationPaymentService) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonF1ce6669DecodeGithubComGoParkMailRu20242TeamOnPatreonInternalAuthorControllerModels2(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *NotificationPaymentService) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonF1ce6669DecodeGithubComGoParkMailRu20242TeamOnPatreonInternalAuthorControllerModels2(l, v)
}
func easyjsonF1ce6669DecodeGithubComGoParkMailRu20242TeamOnPatreonInternalAuthorControllerModels3(in *jlexer.Lexer, out *Metadata) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "pay_type":
			out.PayType = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonF1ce6669EncodeGithubComGoParkMailRu20242TeamOnPatreonInternalAuthorControllerModels3(out *jwriter.Writer, in Metadata) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"pay_type\":"
		out.RawString(prefix[1:])
		out.String(string(in.PayType))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Metadata) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonF1ce6669EncodeGithubComGoParkMailRu20242TeamOnPatreonInternalAuthorControllerModels3(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Metadata) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonF1ce6669EncodeGithubComGoParkMailRu20242TeamOnPatreonInternalAuthorControllerModels3(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Metadata) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonF1ce6669DecodeGithubComGoParkMailRu20242TeamOnPatreonInternalAuthorControllerModels3(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Metadata) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonF1ce6669DecodeGithubComGoParkMailRu20242TeamOnPatreonInternalAuthorControllerModels3(l, v)
}
func easyjsonF1ce6669DecodeGithubComGoParkMailRu20242TeamOnPatreonInternalAuthorControllerModels4(in *jlexer.Lexer, out *ConfirmationResp) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "type":
			out.Type = string(in.String())
		case "confirmation_url":
			out.ConfirmationURL = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonF1ce6669EncodeGithubComGoParkMailRu20242TeamOnPatreonInternalAuthorControllerModels4(out *jwriter.Writer, in ConfirmationResp) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"type\":"
		out.RawString(prefix[1:])
		out.String(string(in.Type))
	}
	{
		const prefix string = ",\"confirmation_url\":"
		out.RawString(prefix)
		out.String(string(in.ConfirmationURL))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ConfirmationResp) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonF1ce6669EncodeGithubComGoParkMailRu20242TeamOnPatreonInternalAuthorControllerModels4(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ConfirmationResp) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonF1ce6669EncodeGithubComGoParkMailRu20242TeamOnPatreonInternalAuthorControllerModels4(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ConfirmationResp) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonF1ce6669DecodeGithubComGoParkMailRu20242TeamOnPatreonInternalAuthorControllerModels4(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ConfirmationResp) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonF1ce6669DecodeGithubComGoParkMailRu20242TeamOnPatreonInternalAuthorControllerModels4(l, v)
}
func easyjsonF1ce6669DecodeGithubComGoParkMailRu20242TeamOnPatreonInternalAuthorControllerModels5(in *jlexer.Lexer, out *ConfirmationReq) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "type":
			out.Type = string(in.String())
		case "return_url":
			out.ReturnURL = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonF1ce6669EncodeGithubComGoParkMailRu20242TeamOnPatreonInternalAuthorControllerModels5(out *jwriter.Writer, in ConfirmationReq) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"type\":"
		out.RawString(prefix[1:])
		out.String(string(in.Type))
	}
	if in.ReturnURL != "" {
		const prefix string = ",\"return_url\":"
		out.RawString(prefix)
		out.String(string(in.ReturnURL))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ConfirmationReq) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonF1ce6669EncodeGithubComGoParkMailRu20242TeamOnPatreonInternalAuthorControllerModels5(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ConfirmationReq) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonF1ce6669EncodeGithubComGoParkMailRu20242TeamOnPatreonInternalAuthorControllerModels5(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ConfirmationReq) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonF1ce6669DecodeGithubComGoParkMailRu20242TeamOnPatreonInternalAuthorControllerModels5(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ConfirmationReq) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonF1ce6669DecodeGithubComGoParkMailRu20242TeamOnPatreonInternalAuthorControllerModels5(l, v)
}
func easyjsonF1ce6669DecodeGithubComGoParkMailRu20242TeamOnPatreonInternalAuthorControllerModels6(in *jlexer.Lexer, out *Amount) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "value":
			out.Value = string(in.String())
		case "currency":
			out.Currency = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonF1ce6669EncodeGithubComGoParkMailRu20242TeamOnPatreonInternalAuthorControllerModels6(out *jwriter.Writer, in Amount) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"value\":"
		out.RawString(prefix[1:])
		out.String(string(in.Value))
	}
	{
		const prefix string = ",\"currency\":"
		out.RawString(prefix)
		out.String(string(in.Currency))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Amount) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonF1ce6669EncodeGithubComGoParkMailRu20242TeamOnPatreonInternalAuthorControllerModels6(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Amount) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonF1ce6669EncodeGithubComGoParkMailRu20242TeamOnPatreonInternalAuthorControllerModels6(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Amount) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonF1ce6669DecodeGithubComGoParkMailRu20242TeamOnPatreonInternalAuthorControllerModels6(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Amount) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonF1ce6669DecodeGithubComGoParkMailRu20242TeamOnPatreonInternalAuthorControllerModels6(l, v)
}
