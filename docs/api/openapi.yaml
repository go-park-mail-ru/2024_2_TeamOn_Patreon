openapi: 3.0.3
info:
  title: PushART | API
  description: >-
    API для регистрации, авторизации и управления профилем пользователя с
    использованием JWT-токена.
  version: 1.0.5
paths:
  /auth/register:
    post:
      tags:
        - auth
      summary: Регистрация пользователя
      description: >-
        Регистрирует нового пользователя, проверяет уникальность имени,
        возвращает JWT-токен при успешной регистрации.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Reg'
      responses:
        '201':
          description: Успешная регистрация
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
        '400':
          description: >-
            Ошибка валидации (например, имя пользователя уже существует или
            пароль слишком простой)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /auth/login:
    post:
      tags:
        - auth
      summary: Авторизация пользователя
      description: >-
        Авторизует пользователя по имени пользователя или email, возвращает
        JWT-токен.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
      responses:
        '200':
          description: Успешная авторизация
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
        '400':
          description: Неправильный логин или пароль
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: >-
            Слишком большее количество попыток ввода пароля за короткое время.
            Не более 3 попыток за раз.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /profile:
    get:
      tags:
        - profile
      summary: Получение профиля пользователя
      description: Возвращает данные профиля на основе JWT-токена, переданного в Cookie.
      security:
        - cookieAuth: []
      responses:
        '200':
          description: Успешное получение профиля
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
        '401':
          description: Неверный или отсутствующий JWT-токен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /profile/posts:
    get:
      tags:
        - profile
      summary: Получение постов пользователя
      description: >-
        Возвращает список постов пользователя на основе JWT-токена, переданного
        в Cookie.
      security:
        - cookieAuth: []
      responses:
        '200':
          description: Успешное получение постов
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Post'
        '401':
          description: Неверный или отсутствующий JWT-токен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /profile/payments:
    get:
      tags:
        - profile
      summary: Получение суммы выплат пользователя
      description: >-
        Возвращает список выплат пользователя на основе JWT-токена, переданного
        в Cookie.
      security:
        - cookieAuth: []
      responses:
        '200':
          description: Успешное получение выплат
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Payment'
        '401':
          description: Неверный или отсутствующий JWT-токен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /profile/update:
    post:
      tags:
        - profile
      summary: Изменение профиля пользователя
      description: Позволяет обновить отдельные поля профиля. Требует JWT-токен в Cookie.
      security:
        - cookieAuth: []
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProfile'
      responses:
        '200':
          description: Успешное обновление профиля
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
        '400':
          description: Ошибка валидации данных профиля
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Неверный или отсутствующий JWT-токен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /profile/update/photo:
    post:
      tags:
        - profile
      summary: Изменение фотографии пользователя в профиле
      description: Позволяет обновить фото профиля. Требует JWT-токен в Cookie.
      security:
        - cookieAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Upload'
      responses:
        '200':
          description: Успешное обновление фото профиля
          content:
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/Photo'
        '400':
          description: Ошибка загрузки фотографии профиля
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Неверный или отсутствующий JWT-токен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: JWT
  schemas:
    Token:
      type: object
      properties:
        token:
          type: string
          description: JWT-токен для авторизованного пользователя
    Reg:
      type: object
      properties:
        username:
          type: string
          description: >-
            Имя пользователя. допустимые символы - латинские буквы, цифры и "-",
            "_".
          example: putin
          minLength: 4
          maxLength: 15
        password:
          type: string
          description: >-
            Пароль. должен содержать хотя бы 1 заглавную, 1 строчную латинские
            буквы, 1 цифру, 1 спец символ.
          example: P@ssw0rd123
          minLength: 8
          maxLength: 64
          pattern: >-
            /(?=.*[0-9])(?=.*[!@#$%^&*])(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z!@#$%^&*]{6,}/g
          format: password
      required:
        - username
        - password
    Login:
      type: object
      properties:
        username:
          type: string
          description: Логин пользователя (имя пользователя или почта)
          example: johndoe
        password:
          type: string
          description: Пароль пользователя
          example: P@ssw0rd123
          format: password
      required:
        - login
        - password
    Profile:
      type: object
      required:
        - username
      description: Модель профиля пользователя
      properties:
        username:
          type: string
          description: Имя пользователя
        email:
          type: string
          description: Почта пользователя (если есть)
          nullable: true
        avatar_url:
          type: string
          description: Ссылка на фото профиля (если есть)
          nullable: true
        followers:
          type: integer
          description: Количество подписчиков
        subscriptions:
          type: integer
          description: Количество подписок
        posts:
          type: integer
          description: Количество постов
    UpdateProfile:
      type: object
      properties:
        username:
          type: string
          description: Новое имя пользователя
          example: newname
        email:
          type: string
          description: Новая почта пользователя
          format: email
          example: newemail@example.com
    Upload:
      type: object
      required:
        - files
      description: Фотография для аватара пользователя. Максимальный размер 25 Мб.
      properties:
        files:
          type: string
          format: binary
    Post:
      type: object
      required:
        - id
        - text
      description: Модель поста
      properties:
        id:
          type: integer
          description: ID поста
        text:
          type: string
          description: Текст поста
        media_content_url:
          type: string
          description: Ссылка на медиа-контент поста
        createdAt:
          type: string
          format: date-time
          description: Дата создания поста
        updatedAt:
          type: string
          format: date-time
          description: Дата обновления поста
    Payment:
      type: object
      required:
        - amount
      description: Модель выплаты
      properties:
        amount:
          type: number
          description: Сумма выплаты
    Error:
      type: object
      properties:
        message:
          type: string
          description: Сообщение об ошибке
    Photo:
      type: object
      properities:
        avatar_url:
          type: string
          description: Ссылка на фото
